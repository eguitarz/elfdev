#hidden-menu.inactive
	.header-bar
		.brand Elfdev
		.version v1.0.0
	.wrapper
		.app.small
			.title
				Sport
		.app.small
			.title
				Journal
		.app.large
			.title
				Explorer
#indicator
#sidebar
	#col-1.col-md-2
		< ELFDEV
	#col-2.col-md-2
		- if @recent_walk
			.squared.walked
				%h3
					Walked
				%strong 
					= number_with_delimiter( (@recent_walk[:total_distance]*1.312335).round(0))
				%small steps
				.info
					%time 
						- timeago = "#{time_ago_in_words(@recent_walk[:start_time])} ago".gsub('about', '')
						= "#{timeago} for #{(@recent_walk[:duration]/60).round(0)}m"
		- if @recent_run
			.squared.ran
				%h3
					Latest Run
				%strong
					= number_with_delimiter(@recent_walk[:total_distance].round(0))
				%small meters
				.info
					%time
						- timeago = "#{time_ago_in_words(@recent_run[:start_time])} ago".gsub('about', '')
						= "#{timeago} for #{(@recent_run[:duration]/60).round(0)}m"
		- if @recent_cycle
			.squared.cycled
				%h3
					Cycling
				%strong
					= number_with_delimiter((@recent_cycle[:total_distance]/1000).round(1))
				%small kilometers
				.info
					%time
						- timeago = "#{time_ago_in_words(@recent_cycle[:start_time])} ago".gsub('about', '')
						= "#{timeago} for #{(@recent_cycle[:duration]/60).round(0)}m"
	- @summaries.each do |s|
		#col-3.col-md-8.loadable
			%h3 
				= s[:month]
			- if s[:walks].any?
				.bar-chart.walking
					%h4 
						= "Walked #{number_with_delimiter(s[:walk_steps])} steps"
					- s[:walks].each do |w|
						.bar{:'data-duration' => "#{(w[:duration]/60).round(0)} minutes", :'data-distance' => "#{number_with_delimiter(w[:distance].round(0))} meters"}
							- bar_class = 'white-bg'
							- if w[:steps] >= 10000 
								- bar_class = 'orange-bg'
							-	elsif w[:steps] < 3000
								- bar_class = 'red-bg'
							.bar-overlay{percent: "#{[100, w[:steps]*100/10000].min}", class: bar_class}
							.date
								= "#{w[:date].slice(-2, 2)}"
			- if s[:runs].any?
				.bar-chart.running
					%h4
						= "Ran #{s[:runs].count} times"
					- s[:runs].each do |r|
						.bar{:'data-duration' => "#{(r[:duration]/60).round(0)} minutes", :'data-distance' => "#{number_with_delimiter(r[:distance].round(0))} meters"}
							- bar_class = 'white-bg'
							- if r[:distance] >= 5000 
								- bar_class = 'orange-bg'
							-	elsif r[:distance] < 3000
								- bar_class = 'red-bg'
							.bar-overlay{percent: "#{[100, r[:distance]*100/5000].min}", class: bar_class}
							.distance.loadable{style:"left: #{[100, r[:distance]*100/5000].min + 2}%"}
								= "#{(r[:distance] / 1000).round(2)} km"
							.date
								= "#{r[:date].slice(-2, 2)}"
			- if s[:cycles_count] > 0
				.dot-chart.cycling
					%h4
						= "Cycled #{s[:cycles_count]} times"
					.row
						.col-md-12
							.distance-tag.red
								0 - 10k
							.dots
								- s[:cycles_v1].each do |c|
									.dot.red-border.loadable{:'data-duration' => "#{(c[:duration]/60).round(0)} minutes", :'data-distance' => "#{number_with_delimiter(c[:distance].round(0))} meters"}
										= "#{(c[:distance] / 1000).round(1)}"
					.row
						.col-md-12
							.distance-tag.blue
								10 - 20k
							.dots
								- s[:cycles_v2].each do |c|
									.dot.blue-border.loadable.dot.red-border.loadable{:'data-duration' => "#{(c[:duration]/60).round(0)} minutes", :'data-distance' => "#{number_with_delimiter(c[:distance].round(0))} meters"}
										= "#{(c[:distance] / 1000).round(1)}"
					.row
						.col-md-12
							.distance-tag.orange
								20k+
							.dots
								- s[:cycles_v3].each do |c|
									.dot.orange-border.loadable.dot.red-border.loadable{:'data-duration' => "#{(c[:duration]/60).round(0)} minutes", :'data-distance' => "#{number_with_delimiter(c[:distance].round(0))} meters"}
										= "#{(c[:distance] / 1000).round(1)}"