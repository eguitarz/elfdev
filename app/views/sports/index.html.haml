#sidebar
	#col-1.col-md-2
		< ELFDEV
	#col-2.col-md-2
		.squared.walked
			%h3
				Walked
			%strong 3,445
			%small steps
			.info
				%time 1h ago for 39m
		.squared.ran
			%h3
				Latest Run
			%strong 12,225
			%small meters
			.info
				%time 2d ago for 42m
		.squared.cycled
			%h3
				Cycling
			%strong 12,668
			%small meters
			.info
				%time 3d ago for 122m
	- @summaries.each do |s|
		#col-3.col-md-8.loadable
			%h3 
				= s[:month]
			- if s[:walks].any?
				.bar-chart.walking
					%h4 
						= "Walked #{number_with_delimiter(s[:walk_steps])} steps"
					- s[:walks].each do |w|
						.bar
							- bar_class = 'white-bg'
							- if w[:steps] >= 10000 
								- bar_class = 'orange-bg'
							-	elsif w[:steps] < 3000
								- bar_class = 'red-bg'
							.bar-overlay{percent: "#{[100, w[:steps]*100/10000].min}", class: bar_class}
							.date
								= "#{w[:date].slice(-2, 2)}"
			- if s[:runs].any?
				.bar-chart.running
					%h4
						= "Ran #{s[:runs].count} times"
					- s[:runs].each do |r|
						.bar
							- bar_class = 'white-bg'
							- if r[:distance] >= 5000 
								- bar_class = 'orange-bg'
							-	elsif r[:distance] < 3000
								- bar_class = 'red-bg'
							.bar-overlay{percent: "#{[100, r[:distance]*100/5000].min}", class: bar_class}
							.distance.loadable{style:"left: #{[100, r[:distance]*100/5000].min + 2}%"}
								= "#{(r[:distance] / 1000).round(2)} km"
							.date
								= "#{r[:date].slice(-2, 2)}"
			- if s[:cycles_count] > 0
				.dot-chart.cycling
					%h4
						= "Cycled #{s[:cycles_count]} times"
					.row
						.col-md-12
							.distance-tag.red
								0 - 10k
							.dots
								- s[:cycles_v1].each do |c|
									.dot.red-border.loadable
										= "#{(c[:distance] / 1000).round(1)}"
					.row
						.col-md-12
							.distance-tag.blue
								10 - 20k
							.dots
								- s[:cycles_v2].each do |c|
									.dot.blue-border.loadable
										= "#{(c[:distance] / 1000).round(1)}"
					.row
						.col-md-12
							.distance-tag.orange
								20k+
							.dots
								- s[:cycles_v3].each do |c|
									.dot.orange-border.loadable
										= "#{(c[:distance] / 1000).round(1)}"